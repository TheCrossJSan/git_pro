#include <iostream>
using namespace std;

int main() {
    int t, smax, sum, count;
    string a;
    cin>>t;
    for(int i=0; i<t; i++)
    {
        sum=0;
        count=0;
        cin>>smax;
        cin>>a;
        /*for(int j=0; j<=smax; j++)
        {
            cin>>a[i];
        }*/
        for(int j=0; j<=smax; j++)
        {
            if(a[j]-48!=0 && sum<j)
            {
                count=count+j-sum;
                sum=sum+count;
            }
            sum=sum+(a[j]-48);
            //cout<<sum<<endl;
        }
        cout<<"Case #"<<i+1<<":"<<" "<<count<<endl;
    }
	// your code goes here
	return 0;
}



#include <iostream>
using namespace std;

int main() 
{
    int l, c, r, j, k;
    char m[10][20];
    string s;
    while(1)
    {
        cin>>c>>s;
        if(c==0)
            break;
        int r=(s.length()/c);
        cout<<r<<endl;
        j=-1;
        k=0;
        for(int i=0; i<r; i++)
        {
            int z=i&1;
            if(z==0)
                j++;
            else
                j--;
            for(l=0; l<c; l++)
            {
                if(z==0)
                {
                    m[i][j++]=s[k++];
                }
                else
                {
                    m[i][j--]=s[k++];
                }
            }
        }
        for(int i=0; i<c; i++)
            for(j=0; j<r; j++)
                cout<<m[j][i];
        cout<<endl;
    }
    // your code goes here
	return 0;
}









#include <iostream>
using namespace std;

int main() 
{
    int t, i;
    string s;
    cin>>t;
    while(t--)
    {
        cin>>s;
        int len=s.length();
        int l=((len-3)/2);
        len--;
        int flag=0, fp=0;
        for(i=0; i<=l; i++)
        {
            if(s[i]==s[len])
            {
                len--;
                continue;
            }
            else if(s[i]>s[len])
            {
                flag=0;
                fp=1;
                s[len]=s[i];
                len--;
            }
            else
            {
                flag=1;
                fp=1;
                s[len]=s[i];
                len--;
            }
        }
        if((fp==0 || flag==1) && s[i]==s[len])
        {
            if(s.length()==1)
               s="11"; 
            else if(i==len)
                s[i]++;
            else if(i!=len)
            {
                s[i]++;
                s[len]++;
            }
        }
        else if(s[i]>s[len])
            s[len]=s[i];
        else if(s[i]<s[len])
        {
            s[i]++;
            s[len]=s[i];
        }
        cout<<s<<endl;
    }
	// your code goes here
	return 0;
}



Problem for 9s.


#include <iostream>
using namespace std;

int main()
{
    int  t;
    string a, b, c, d, e;
    cin>>t;
    while(t--)
    {
        int flaga=0, flagc=0, flage=0, flga=0, flgc=0, flge=0, i=0;
        cin>>a>>b>>c>>d>>e;
             
        for(i=0; i<a.length(); i++)
        {
            if(a[i]=='m')
            {
                flaga=1;
                break;
            }
            else
            {
                flga=flga*10+(a[i]-48);
            }
        }
        
        for(i=0; i<c.length(); i++)
        {
            if(c[i]=='m')
            {
                flagc=1;
                break;
            }
            else
            {
                flgc=flgc*10+(c[i]-48);
            }
        }
    
        for(i=0; i<e.length(); i++)
        {
            if(e[i]=='m')
            {
                flage=1;
                break;
            }
            else
            {
                flge=flge*10+(e[i]-48);
            }
        }
        
        if(flaga==1)
            flga=flge-flgc;
        else if(flagc==1)
            flgc=flge-flga;
        else if(flage==1)
            flge=flga+flgc;
        
        cout<<flga<<" "<<"+"<<" "<<flgc<<" "<<"="<<" "<<flge<<endl;
    }
   	// your code goes here
	return 0;
}




#include <iostream> 
using namespace std;
void initialise(long long int b[], int slen)
{ 
    for(int i=0; i<slen+1; i++) 
    { 
        b[i]=0;
    }
}

int main()
{ 
    int i;
    int count, temp;// temp2;
    long long int b[5005], c[5005], sum, asum;
    string s;
    while(1)
    {
        sum=0, asum=0, count=0;
        cin>>s;
        if(s[0]-48==0)
            break;
        int slen=s.length();
        initialise(b, slen);
        initialise(c, slen);
        for(i=0; i<slen-1; i++)
        {
            if(slen==1)
                break;
            else if(s[i]-48==0)
            {
                //flag=1;
                continue;
            }
            temp=(s[i]-48)*10+(s[i+1]-48);
            if(s[i+2]-48!=0 && (temp)<=26)
            {
                if(temp%10!=0)
                {
                    b[i]++;
                    sum++;
                    //flag=1;
                   // temp2++;
                }
                //b[i]++;
                //sum++;
            }
        }
        /*if(temp2==1)
            sum=temp2;
        else if(temp2>1)
        sum=0; */
        
        for(i=slen-2; i>=0; i--)
        {
            if(b[i]==1)
            {
                c[i]=c[i]+asum-c[i+1]+count;
                sum=sum+c[i];
                if(b[i+1]==1)
                {
                    sum=sum-1;
                    c[i]=c[i]-1;
                }
                asum+=c[i];
                count++;
            }
        }
        /*for(i=0; i<slen-1; i++)
        {
            cout<<b[i]<<" ";
        }*/
        //cout<<endl;
        //if(flag==0)
        sum=sum+1;
        cout<<sum<<endl;
    }
        // your code goes here
    return 0;
}


//Merge Sort
#include <iostream>
using namespace std;

void merge(int a[], int l, int m, int r)
{
    int n1 = m - l + 1;
    int n2 = r - m;
    int left[n1], right[n2];
    int i, j=m+1, k=l;

    for(i=0; i<n1; i++)
        left[i]=a[l+i];
    for(i=0; i<n2; i++)
        right[i]=a[j+i];
    i=0;
    j=0;
    
    while(i<n1 && j<n2)
    {
        //cout<<i<<j<<"entered"<<endl;
        if(left[i]<=right[j])
            a[k++]=left[i++];
        else
            a[k++]=right[j++];
    }
    
    while(i<n1)
        a[k++]=left[i++];
    while(j<n2)
        a[k++]=right[j++];
}

void merge_sort(int a[], int l, int r)
{
    if(r!=l)
    {
    int m=l+(r-l)/2;
    merge_sort(a, l, m);
    merge_sort(a, m+1, r);
    merge(a, l, m, r);
    }
}

int main()
{
    int a[10]={5, 4, 2, 3, 1, 6, 9, 8, 10, 7};
    merge_sort(a, 0, 9);
    for(int i=0; i<10; i++)
        cout<<a[i]<<" ";
	// your code goes here
	return 0;
}
